AWSTemplateFormatVersion: 2010-09-09
Parameters:
  LambdaCodeBucket:
    Type: String
    Description: S3 bucket in which custom lambda code is stored
  LambdaCodeKey:
    Type: String
    Description: Jar file name in which custom lambda code is stored
    Default: deliSHAs_crawler-1.0-SNAPSHOT-all.jar
  Lambdahandler:
    Type: String
    Description: Python file name which is packed inside the zip file
    Default: Crawler::handleRequest
  JdbcUrl:
    Type: String
    Description: Jdbc url which lambda function would use
  JdbcPassword:
    Type: String
    Description: Jdbc password for db connection

Resources:
  LambdaIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

  CustomResourceLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: !Ref Lambdahandler
      Role: !GetAtt LambdaIAMRole.Arn
      FunctionName: 'deliSHAs_crawler_test'
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref LambdaCodeKey
      Runtime: java11
      Timeout: 60
      Environment:
        Variables:
          BASE_CRAWL_URL: 'http://snuco.snu.ac.kr/ko/foodmenu'
          JDBC_DRIVER: 'com.mysql.cj.jdbc.Driver'
          JDBC_PASSWORD: !Ref JdbcPassword
          JDBC_URL: !Ref JdbcUrl
          JDBC_USERNAME: 'root'

  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Scheduled Rule"
      ScheduleExpression: "rate(10 minutes)"
      State: "DISABLED"
      Targets:
        - Arn: !GetAtt CustomResourceLambdaFunction.Arn
          Id: "TargetFunctionV1"

  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission # 타 AWS 리소스 혹은 AWS 계정에 해당 함수를 사용할 권한을 부여한다.
    Properties:
      FunctionName: !GetAtt CustomResourceLambdaFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt ScheduledRule.Arn # ScheduledRule 리소스에 함수를 invoke할 권한을 부여함
